---
name: Build & Verify Golang Module
on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      module-name:
        required: true
        type: string
      golint-version:
        default: v1.61.0-alpine
        required: true
        type: string
      golang-version:
        default: 1.23.1
        required: true
        type: string
      timeout-minutes:
        default: 10m
        required: false
        type: string
      environment-name:
        default: k8s
        required: true
        type: string
      accept-linterrors:
        default: false
        required: true
        type: boolean
      accept-failedtests:
        default: false
        required: true
        type: boolean

jobs:
  Lint-Go:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: golangci/golangci-lint:${{ inputs.golint-version }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: ${{ inputs.accept-linterrors }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Lint golang code
        run: |
          golangci-lint run --timeout=${{ inputs.timeout-minutes }}

  Test-Go:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: golang:${{ inputs.golang-version }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: ${{ inputs.accept-failedtests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Test code
        run: |
          go mod tidy
          go test ./... -v

  Build-Go:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: golang:${{ inputs.golang-version }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set homerun defaults
        run: |
          echo "SEVERITY=ERROR" >> $GITHUB_ENV

      - name: Start Timer
        id: start-time
        run: |
          echo "Start Time: $(date +%s)" && echo "start=$(date +%s)" >> $GITHUB_ENV

      - name: Build binary
        run: |
          go mod tidy
          CGO_ENABLED=0 go build -buildvcs=false -o ${{ inputs.module-name }}
          du -sh ./${{ inputs.module-name }}
          echo "SEVERITY=INFO" >> $GITHUB_ENV

      - name: End Timer
        id: end-time
        run: |
          echo "End Time: $(date +%s)" && echo "end=$(date +%s)" >> $GITHUB_ENV

      - name: Calculate Duration
        run: |
          duration=$((end - start))
          echo "Job Duration: ${duration} seconds"
        env:
          start: ${{ env.start }}
          end: ${{ env.end }}

      - name: Send Message To Homerun
        if: always()
        uses: stuttgart-things/github-workflow-templates/actions/send-homerun-message@main
        with:
          url: "https://homerun.homerun-dev.sthings-vsphere.labul.sva.de/generic"
          secretToken: "${{ secrets.HOMERUN_TOKEN }}" # Pass the secret
          title: "${{ inputs.module-name }} GoLang Build"
          message: "${{ inputs.module-name }} GoLang Build"
          severity: "${{ env.SEVERITY }}"
          artifacts: "${{ inputs.module-name }}"
          tags: "github,${{ inputs.module-name }}"
          assigneeName: "patrick"
          assigneeAddress: ""
